import React from "react";
import Head from "next/head";
import HeaderLayout from "../../layouts/HeaderLayout";
import CoursesScreen from "../../components/screens/CoursesScreen";
import { requireAuth } from "../../utils/requireAuth";
import prisma from "../../lib/prismadb";
import { unstable_getServerSession } from "next-auth";
import { authOptions } from "pages/api/auth/[...nextauth]";
import { PrismaClient } from "@prisma/client";

type Props = {
  courses: Array<{
    id: number;
    name: string;
    term: number;
    description: string;
    open: boolean;
  }>;
};

const CoursesPage = ({ courses }: Props) => {
  courses.sort((a, b) => (a.term > b.term ? 1 : -1));
  return (
    <div>
      {" "}
      <Head>
        <title>E-class</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <HeaderLayout>
        <CoursesScreen courses={courses} />
      </HeaderLayout>
    </div>
  );
};

export async function getServerSideProps(context: any) {
  const session = await unstable_getServerSession(context.req, context.res, authOptions);
  let courses;
  if (!session) {
    const data = await prisma.course.findMany();
    courses = data;
  } else {
    const email = session.user!.email!;
    const data = await prisma.student.findMany({
      include: {
        courses: true,
      },
      where: {
        email: email,
      },
    });
    const courseIds = data[0].courses.map((c: any) => c.courseId);
    courses = await prisma.course.findMany({
      where: { id: { in: courseIds } },
    });
    console.log(courses);
  }
  return { props: { courses } };
}

export default CoursesPage;
