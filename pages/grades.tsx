import Head from "next/head";
import { unstable_getServerSession } from "next-auth/next";
import HeaderLayout from "../layouts/HeaderLayout";
import GradesScreen from "../components/screens/GradesScreen";
import { requireAuth } from "../utils/requireAuth";
import prisma from "../lib/prismadb";
import { authOptions } from "./api/auth/[...nextauth]";

type Props = {
  grades: Array<{
    courseId: number;
    studentId: number;
    grade: number;
  }>;
};

type Student = {
  name: string;
  email: string;
  image: string;
  grades: Object;
};

export default function Home({ grades }: Props) {
  return (
    <div>
      <Head>
        <title>E-class</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HeaderLayout>
        <GradesScreen grades={grades} />
      </HeaderLayout>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  return requireAuth(context, async () => {
    const session = await unstable_getServerSession(
      context.req,
      context.res,
      authOptions
    );
    const email = session.user.email;

    const data: Student = await prisma.student.findMany({
      where: { email: email },
      include: { grades: true },
    });
    const grades = data[0].grades;
    console.log(grades);
    return { props: { grades } };
  });
}
