datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Grade {
  courseId      Int 
  student       Student @relation(fields: [studentId], references: [id])
  studentId     Int
  grade         Float
  @@id([courseId, studentId])
}

model Course {
  id            Int   @id @default(autoincrement())
  name          String 
  term          Int
  description   String
  open          Boolean
  announcements Announcement[]
  students CoursesOnStudents[]
}

model Student {
  id                Int   @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String @unique
  year              Int
  grades     Grade[]
  courses CoursesOnStudents[]
}

model CoursesOnStudents {
  student Student @relation(fields: [studentId], references: [id])
  studentId Int
  course Course @relation(fields: [courseId], references: [id])
  courseId Int

  @@id([studentId, courseId])
}

model Announcement {
  id          Int  @id @default(autoincrement())
  course      Course @relation(fields: [courseId], references: [id])
  courseId    Int
  date        DateTime
  title       String
  content     String
}
